PATTERNS -> Nested Loops

1. for the outer loop, count the no of lines.

2. for the inner loop, focus on the columns and connect them somehow to the rows.

3. print "*" inside the inner for loop.

4. observe symmetry (Optional)

Pattern 1

* * * *
* * * *
* * * *
* * * *

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            printf("* ");
        }
        printf("\n");
    }
}

Pattern 2

* 
* * 
* * *
* * * *

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            printf("* ");
        }
        printf("\n");
    }
}

Pattern 3

1 
1 2 
1 2 3 
1 2 3 4 

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            printf("%d ", j);
        }
        printf("\n");
    }
}

Pattern 4

1 
2 2 
3 3 3 
4 4 4 4

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            printf("%d ", i);
        }
        printf("\n");
    }
}

Pattern 5

* * * *
* * *
* *
*

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n-i+1; j++)
        {
            printf("* ");
        }
        printf("\n");
    }
}

Pattern 6

1 2 3 4
1 2 3
1 2
1

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n-i+1; j++)
        {
            printf("%d ", j);
        }
        printf("\n");
    }
}

Pattern 7

   *   
  ***  
 ***** 
*******

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n-i; j++)  // space
        {
            printf(" ");
        }
        for (int j = 1; j <= 2*i-1; j++)  // star
        {
            printf("*");
        }
        for (int j = 1; j <= n-i; j++)  // space
        {
            printf(" ");
        }
        printf("\n");
    }
}

Pattern 8

*******
 ***** 
  ***  
   *  

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i-1; j++)  // space
        {
            printf(" ");
        }
        for (int j = 1; j <= 2*(n-i)+1; j++)  // star
        {
            printf("*");
        }
        for (int j = 1; j <= i-1; j++)  // space
        {
            printf(" ");
        }
        printf("\n");
    }
}

Pattern 9

   *   
  ***  
 ***** 
*******
*******
 ***** 
  ***  
   *   

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)    // Upper Triangle
    {
        for (int j = 1; j <= n-i; j++)
        {
            printf(" ");
        }
        for (int j = 1; j <= 2*i-1; j++)
        {
            printf("*");
        }
        for (int j = 1; j <= n-i; j++)
        {
            printf(" ");
        }
        printf("\n");
    }
    for (int i = 1; i <= n; i++)    // Lower Triangle
    {
        for (int j = 1; j <= i-1; j++)
        {
            printf(" ");
        }
        for (int j = 1; j <= 2*(n-i)+1; j++)
        {
            printf("*");
        }
        for (int j = 1; j <= i-1; j++)
        {
            printf(" ");
        }
        printf("\n");
    }    
}

Pattern 10

*
**
***
****
***
**
*

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            printf("*");
        }
        printf("\n");
    }
    for (int i = 1; i <= n-1; i++)
    {
        for (int j = 1; j <= n-i; j++)
        {
            printf("*");
        }
        printf("\n");
    }
}

Pattern 11

1 
0 1 
1 0 1 
0 1 0 1

#include<stdio.h>
int main()
{
    int n = 4;
    for (int i = 1; i <= n; i++)
    {
        if (i % 2 == 1)
        {
            for (int j = 1; j <= i; j++)
            {
                if (j % 2 == 1)
                {
                    printf("%d ", 1);
                }
                else
                {
                    printf("%d ", 0);
                }
            }
        }
        else
        {
            for (int j = 1; j <= i; j++)
            {
                if (j % 2 == 1)
                {
                    printf("%d ", 0);
                }
                else
                {
                    printf("%d ", 1);
                }
            }
        }
        printf("\n");
    }
}

Pattern 12

1             1 
1 2         2 1 
1 2 3     3 2 1 
1 2 3 4 4 3 2 1 

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            printf("%d ", j);
        }
        for (int j = 1; j <= 2*(n-i); j++)
        {
            printf("  ");
        }
        int start = i;
        for (int j = 1; j <= i; j++)
        {
            printf("%d ", start);
            start -= 1;
        }
        printf("\n");
    }
}

Pattern 13

1 
2 3 
4 5 6 
7 8 9 10 

#include<stdio.h>
int main()
{
    int n = 4, start = 1;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            printf("%d ", start);
            start += 1;
        }
        printf("\n");
    }
}

Pattern 14

A
A B
A B C 
A B C D

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            printf("%c ", j+64);
        }
        printf("\n");
    }
}

Pattern 15

A B C D
A B C
A B
A

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= (n-i)+1; j++)
        {
            printf("%c ", 64+j);
        }
        printf("\n");
    }
}

Pattern 16

A
B B
C C C
D D D D

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            printf("%c ", 64+i);
        }
        printf("\n");
    }
}

Pattern 17

      A       
    A B A     
  A B C B A   
A B C D C B A

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n-i; j++)  // space
        {
            printf("  ");
        }
        for (int j = 1; j <= 2*i-1; j++)
        {
            if (j > i)
            {
                printf("%c ",2*i-j+64);
            }
            else
            {
                printf("%c ", j+64);
            }
        }
        for (int j = 1; j <= n-i; j++)  // space
        {
            printf("  ");
        }
        printf("\n");
    }
}

Pattern 18

D 
D C 
D C B 
D C B A 

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= 4; i++)
    {
        int start = n;
        for (int j = 1; j <= i; j++)
        {
            printf("%c ", start+64);
            start -= 1;
        }
        printf("\n");
    }
}

Pattern 19

********
***  ***
**    **
*      *
*      *
**    **
***  ***
********

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n-i+1; j++)
        {
            printf("*");
        }
        for (int j = 1; j <= 2*(i-1); j++)
        {
            printf(" ");
        }
        for (int j = 1; j <= n-i+1; j++)
        {
            printf("*");
        }
        printf("\n");
    }
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            printf("*");
        }
        for (int j = 1; j <= 2*(n-i); j++)
        {
            printf(" ");
        }
        for (int j = 1; j <= i; j++)
        {
            printf("*");
        }
        printf("\n");
    }
}

Pattern 20

*      *
**    **
***  ***
********
***  ***
**    **
*      *

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            printf("*");
        }
        for (int j = 1; j <= 2*(n-i); j++)
        {
            printf(" ");
        }
        for (int j = 1; j <= i; j++)
        {
            printf("*");
        }
        printf("\n");
    }
    for (int i = 1; i <= n-1; i++)
    {
        for (int j = 1; j <= n-i; j++)
        {
            printf("*");
        }
        for (int j = 1; j <= 2*i; j++)
        {
            printf(" ");
        }
        for (int j = 1; j <= n-i; j++)
        {
            printf("*");
        }
        printf("\n");
    }
}

Pattern 21

****
*  *
*  *
****

#include<stdio.h>
int main()
{
    int n = 4;

    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            if (i == 1 || i == n || j == 1 || j == n)
            {
                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
        printf("\n");
    }
}

Pattern 22

4444444
4333334
4322234
4321234
4322234
4333334
4444444

#include<stdio.h>

int minValue(int a, int b, int c, int d)
{
    if (a <= b && a <= c && a <= d)
    {
        return a;
    }
    else if (b <= c && b <= d)
    {
        return b;
    }
    else if (c <= d)
    {
        return c;
    }
    else
    {
        return d;
    }
}

int main()
{
    int n = 4;

    for (int i = 1; i <= 2*n-1; i++)
    {
        for (int j = 1; j <= 2*n-1; j++)
        {
            int left = i;
            int right = 2*n-i;
            int top = j;
            int bottom = 2*n-j;
            
            int min = minValue(left, right, top, bottom);

            printf("%d", n-min+1);
        }
        printf("\n");
    }
}